From 0806ca6c5bd987eeb0ea5a22ae2488f1c24d5ea5 Mon Sep 17 00:00:00 2001
From: lunatickochiya <125438787@qq.com>
Date: Mon, 15 Sep 2025 21:42:06 +0800
Subject: [PATCH] Revert "mt76: update to Git HEAD (2025-09-15)" Revert "mt76:
 update to Git HEAD (2025-09-09)"

This reverts commit 186534e167b51023a531a0bffafa5dee39ba57d2.
Revert "mt76: update to Git HEAD (2025-09-15)"

This reverts commit 457d0ca35970b24a2d0b8cc410ee73795b1b0440.
---
 .../kernel/mt76/patches/100-api_compat.patch  | 42 ++++---------------
 ...tk_wed-move-dlm-a-dedicated-dts-node.patch |  4 +-
 2 files changed, 11 insertions(+), 35 deletions(-)

diff --git a/package/kernel/mt76/patches/100-api_compat.patch b/package/kernel/mt76/patches/100-api_compat.patch
index 2081b16180..989967164b 100644
--- a/package/kernel/mt76/patches/100-api_compat.patch
+++ b/package/kernel/mt76/patches/100-api_compat.patch
@@ -23,7 +23,7 @@
  	.set_rts_threshold = mt7915_set_rts_threshold,
 --- a/mt7996/main.c
 +++ b/mt7996/main.c
-@@ -732,8 +732,7 @@ static void mt7996_configure_filter(stru
+@@ -715,8 +715,7 @@ static void mt7996_configure_filter(stru
  }
  
  static int
@@ -33,8 +33,8 @@
  {
  	struct mt7996_vif *mvif = (struct mt7996_vif *)vif->drv_priv;
  	struct mt7996_phy *phy = mt7996_vif_link_phy(&mvif->deflink);
-@@ -1716,26 +1715,31 @@ static void mt7996_link_rate_ctrl_update
- 	spin_unlock_bh(&dev->mt76.sta_poll_lock);
+@@ -1687,13 +1686,12 @@ out:
+ 	rcu_read_unlock();
  }
  
 -static void mt7996_link_sta_rc_update(struct ieee80211_hw *hw,
@@ -46,36 +46,12 @@
 +				 struct ieee80211_sta *sta,
 +				 u32 changed)
  {
+ 	struct mt7996_dev *dev = mt7996_hw_dev(hw);
 -	struct ieee80211_sta *sta = link_sta->sta;
- 	struct mt7996_sta *msta = (struct mt7996_sta *)sta->drv_priv;
--	struct mt7996_sta_link *msta_link;
-+	struct mt7996_dev *dev = mt7996_hw_dev(hw);
-+	struct ieee80211_link_sta *link_sta;
-+	unsigned int link_id;
- 
- 	rcu_read_lock();
- 
--	msta_link = rcu_dereference(msta->link[link_sta->link_id]);
--	if (msta_link) {
--		struct mt7996_dev *dev = mt7996_hw_dev(hw);
-+	for_each_sta_active_link(vif, sta, link_sta, link_id) {
-+		struct mt7996_sta_link *msta_link;
-+
-+		msta_link = rcu_dereference(msta->link[link_sta->link_id]);
-+		if (!msta_link)
-+			continue;
- 
- 		mt7996_link_rate_ctrl_update(&changed, msta_link);
--		ieee80211_queue_work(hw, &dev->rc_work);
- 	}
- 
- 	rcu_read_unlock();
-+
-+	ieee80211_queue_work(hw, &dev->rc_work);
- }
  
- static void mt7996_sta_rate_ctrl_update(void *data, struct ieee80211_sta *sta)
-@@ -2248,7 +2252,7 @@ const struct ieee80211_ops mt7996_ops =
+ 	mt7996_link_rate_ctrl_update(&changed, sta);
+ 	ieee80211_queue_work(hw, &dev->rc_work);
+@@ -2186,7 +2184,7 @@ const struct ieee80211_ops mt7996_ops =
  	.link_info_changed = mt7996_link_info_changed,
  	.sta_state = mt7996_sta_state,
  	.sta_pre_rcu_remove = mt76_sta_pre_rcu_remove,
@@ -86,7 +62,7 @@
  	.set_rts_threshold = mt7996_set_rts_threshold,
 --- a/mac80211.c
 +++ b/mac80211.c
-@@ -1752,7 +1752,7 @@ s8 mt76_get_power_bound(struct mt76_phy
+@@ -1745,7 +1745,7 @@ s8 mt76_get_power_bound(struct mt76_phy
  EXPORT_SYMBOL_GPL(mt76_get_power_bound);
  
  int mt76_get_txpower(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
@@ -97,7 +73,7 @@
  	int n_chains, delta;
 --- a/mt76.h
 +++ b/mt76.h
-@@ -1547,7 +1547,7 @@ int mt76_get_min_avg_rssi(struct mt76_de
+@@ -1521,7 +1521,7 @@ int mt76_get_min_avg_rssi(struct mt76_de
  s8 mt76_get_power_bound(struct mt76_phy *phy, s8 txpower);
  
  int mt76_get_txpower(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
diff --git a/target/linux/mediatek/patches-6.6/944-net-ethernet-mtk_wed-move-dlm-a-dedicated-dts-node.patch b/target/linux/mediatek/patches-6.6/944-net-ethernet-mtk_wed-move-dlm-a-dedicated-dts-node.patch
index a7a854dd6e..abb6591b7d 100644
--- a/target/linux/mediatek/patches-6.6/944-net-ethernet-mtk_wed-move-dlm-a-dedicated-dts-node.patch
+++ b/target/linux/mediatek/patches-6.6/944-net-ethernet-mtk_wed-move-dlm-a-dedicated-dts-node.patch
@@ -22,7 +22,7 @@ Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
 
 --- a/drivers/net/ethernet/mediatek/mtk_wed.c
 +++ b/drivers/net/ethernet/mediatek/mtk_wed.c
-@@ -1333,6 +1333,24 @@ mtk_wed_rro_alloc(struct mtk_wed_device
+@@ -1322,6 +1322,24 @@ mtk_wed_rro_alloc(struct mtk_wed_device
  	struct device_node *np;
  	int index;
  
@@ -47,7 +47,7 @@ Signed-off-by: Lorenzo Bianconi <lorenzo@kernel.org>
  	index = of_property_match_string(dev->hw->node, "memory-region-names",
  					 "wo-dlm");
  	if (index < 0)
-@@ -1349,6 +1367,7 @@ mtk_wed_rro_alloc(struct mtk_wed_device
+@@ -1338,6 +1356,7 @@ mtk_wed_rro_alloc(struct mtk_wed_device
  		return -ENODEV;
  
  	dev->rro.miod_phys = rmem->base;
-- 
2.43.0

