From 9995e7fbd6e8bdc4a43b0d264a59e2fd91c10157 Mon Sep 17 00:00:00 2001
From: Sean Khan <datapronix@protonmail.com>
Date: Fri, 7 Feb 2025 10:23:09 -0500
Subject: [PATCH 1/2] ath11k_nss: Drop local M3 patch, fix NSS compile

OpenWrt has added support for QCN6122, and with it brought changes to
using M3 region check. This wasn't being used in IPQ807x NSS implementation,
and my workaround was mostly to get rid of the annoying 'unknown region'
messages that happened on boot.

Revert the M3 SSR dump patch and fix up NSS patch.

Signed-off-by: Sean Khan <datapronix@protonmail.com>
---
 .../ath11k/188-ath11k-m3-ssr-dump-collection.patch | 11 -----------
 ...9-002-ath11k_nss-add-nss-driver-interface.patch | 14 +++-----------
 2 files changed, 3 insertions(+), 22 deletions(-)
 delete mode 100644 package/kernel/mac80211/patches/nss/ath11k/188-ath11k-m3-ssr-dump-collection.patch

diff --git a/package/kernel/mac80211/patches/nss/ath11k/188-ath11k-m3-ssr-dump-collection.patch b/package/kernel/mac80211/patches/nss/ath11k/188-ath11k-m3-ssr-dump-collection.patch
deleted file mode 100644
index 8bff0bf776..0000000000
--- a/package/kernel/mac80211/patches/nss/ath11k/188-ath11k-m3-ssr-dump-collection.patch
+++ /dev/null
@@ -1,11 +0,0 @@
---- a/drivers/net/wireless/ath/ath11k/qmi.c
-+++ b/drivers/net/wireless/ath/ath11k/qmi.c
-@@ -2100,6 +2100,8 @@ static int ath11k_qmi_assign_target_mem_
- 			ab->qmi.target_mem[idx].type = ab->qmi.target_mem[i].type;
- 			idx++;
- 			break;
-+		case M3_DUMP_REGION_TYPE:
-+			break;
- 		default:
- 			ath11k_warn(ab, "qmi ignore invalid mem req type %d\n",
- 				    ab->qmi.target_mem[i].type);
diff --git a/package/kernel/mac80211/patches/nss/ath11k/199-002-ath11k_nss-add-nss-driver-interface.patch b/package/kernel/mac80211/patches/nss/ath11k/199-002-ath11k_nss-add-nss-driver-interface.patch
index c12f14ea37..f516256156 100644
--- a/package/kernel/mac80211/patches/nss/ath11k/199-002-ath11k_nss-add-nss-driver-interface.patch
+++ b/package/kernel/mac80211/patches/nss/ath11k/199-002-ath11k_nss-add-nss-driver-interface.patch
@@ -2760,15 +2760,15 @@ Signed-off-by: Sriram R <srirrama@codeaurora.org>
 +#endif
 --- a/drivers/net/wireless/ath/ath11k/hif.h
 +++ b/drivers/net/wireless/ath/ath11k/hif.h
-@@ -31,6 +31,7 @@ struct ath11k_hif_ops {
- 	void (*ce_irq_enable)(struct ath11k_base *ab);
+@@ -32,6 +32,7 @@ struct ath11k_hif_ops {
  	void (*ce_irq_disable)(struct ath11k_base *ab);
  	void (*get_ce_msi_idx)(struct ath11k_base *ab, u32 ce_id, u32 *msi_idx);
+ 	void (*config_static_window)(struct ath11k_base *ab);
 +	u32 (*get_window_offset)(struct ath11k_base *ab, u32 offset);
  };
  
  static inline void ath11k_hif_ce_irq_enable(struct ath11k_base *ab)
-@@ -137,6 +138,14 @@ static inline void ath11k_get_msi_addres
+@@ -138,6 +139,14 @@ static inline void ath11k_get_msi_addres
  	ab->hif.ops->get_msi_address(ab, msi_addr_lo, msi_addr_hi);
  }
  
@@ -3026,11 +3026,3 @@ Signed-off-by: Sriram R <srirrama@codeaurora.org>
  };
  
  struct ath11k_soc_dp_stats {
-@@ -982,6 +984,7 @@ struct ath11k_base {
- 	struct list_head peers;
- 	wait_queue_head_t peer_mapping_wq;
- 	u8 mac_addr[ETH_ALEN];
-+	int userpd_id;
- 	int irq_num[ATH11K_IRQ_NUM_MAX];
- 	struct ath11k_ext_irq_grp ext_irq_grp[ATH11K_EXT_IRQ_GRP_NUM_MAX];
- 	struct ath11k_targ_cap target_caps;
-- 
2.34.1

